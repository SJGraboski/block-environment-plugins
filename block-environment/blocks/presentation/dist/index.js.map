{"version":3,"file":"index.js","mappings":"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","sources":["webpack:///./src/index.js","webpack:///webpack/bootstrap","webpack:///webpack/runtime/compat get default export","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///./backend.js"],"sourcesContent":["/* src/index.js\n * This file includes the code we write for telling WordPress\n * how the block should behave in the Block Editor.\n * */\n\n// Grabs registerBlockType from wp.blocks (wp-blocks package, see presentation.php)\nconst { registerBlockType } = wp.blocks;\n\n/* Grabs components for laying out the block and manipulating attributes.\n * These are all part of wp.blockEditor (wp-block-editor package, see presentation.php)\n * */\nconst {\n\tRichText,\n    InnerBlocks,\n    InspectorControls,\n} = wp.blockEditor;\n\n/* Grabs more components for laying out the block and manipulating attributes.\n * These are all part of wp.components (wp-components package, see presentation.php)\n * */\nconst {\n\tToggleControl,\n    Panel,\n    PanelRow,\n    PanelBody\n} = wp.components;\n\n/* This is where we register the block in our JavaScript.\n * Arg 1 is the name of the block. Generally 'plugin/block'.\n * Make sure you use the same name in your PHP file (see presentation.php)\n * */\nregisterBlockType('block-environment/presentation', \n{\n    title: 'Presentation',\n    category: 'text',\n    attributes: {\n        featured: {\n            type: 'boolean',\n            default: false\n        },\n        /* Since the text attributes will be part of the rendered HTML, \n         * we source them there. See the save property at the end of this file.\n         * */\n        title: {\n            type: 'string',\n            default: '',\n            source: 'html',\n            selector: '.title'\n        },\n        description: {\n            type: 'string',\n            default: '',\n            source: 'html',\n            selector: '.description'\n        },\n    },\n\n    /* edit: this property handles how the block appears in the editor, \n     * and how the author will manipulate the block's attributes.\n     * */\n    edit: ({attributes, setAttributes}) => {\n        return (\n            <div>\n                <p><strong>Presentation Details</strong></p>\n                <div className=\"presentation-title\">\n                    {/* The RichText component appears as a single editable paragraph.\n                      * The placeholder and tagName properties control the block's appearance in the editor.\n                      * The value attribute is the value that should display. We tie it to our title attribute.\n                      * onChange occurs whenever the author types anything in the field. When that happens,\n                      * we use WordPress's setAttributes property to set the titlte attribute to the new value}\n                      * */}\n                    <RichText\n                        placeholder=\"Enter the Presentation's Title\"\n                        tagName='h2'\n                        value={attributes.title}\n                        onChange={(newValue) => setAttributes({ title: newValue })}\n                    />\n                </div>\n                <div className=\"presentation-description\">\n                    {/* The InnerBlocks Component allows us to add as many blocks as we need. \n                      * See the save property for how we keep track of this Component's value.\n                      * */}\n                    <InnerBlocks />\n                </div>\n                {/* The InspectorControls component allows us to edit\n                  * what the right side of the Block Editor looks like\n                  * when the author select the block.\n                  * */}\n                <InspectorControls>\n                    <Panel>\n                        <PanelBody>\n                            <PanelRow>\n                                {/* ToggleControl will appear as an on-and-off switch in the Block Editor.\n                                  * The label property is the label that will appear above the field.\n                                  * The value property will be a boolean, controlling whether the switch is on or off.\n                                  * onChange will fire whenever the user activates the toggle. When they do, \n                                  * we tell setAttributes to take the current boolean value of the block's featured attribute,\n                                  * and reverse it (false becomes true, true becomes false)\n                                  * */}\n                                <ToggleControl \n                                    label=\"Is This Featured?\"  \n                                    value={ attributes.featured }  \n                                    onChange={ () => setAttributes( { featured: !attributes.featured } ) }\n                                />\n                            </PanelRow>\n                        </PanelBody>\n                    </Panel>\n                </InspectorControls>\n            </div>\n        )   \n    },\n\n    /* save: this property handles how the block appears \n     * on the front-end of WordPress. See the source properties \n     * of the title and description attributes to see \n     * how we keep track of those values.\n     * */\n    save: ({attributes}) => {\n        return (\n            <div \n                className={ attributes.featured\n                    ? 'wp-block-presentation featured-presentation'\n                    : 'wp-block-presentation'\n                }\n            >\n                <RichText.Content \n                    tagName=\"h2\" \n                    className=\"title\" \n                    value={ attributes.featured \n                        ? \"Featured: \" + attributes.title \n                        : attributes.title} \n                />\n                <div className=\"description\">\n                    <InnerBlocks.Content />\n                </div>\n            </div>\n        )\n\t}\n});","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","/* backend.js \n * Webpack will read the files you import\n * and use babel for transpiling your JSX and ES6 \n * into code that most browsers can read. \n * It will also process your SASS code into minified CSS.\n * */\nimport './src/index'; \nimport './src/editor.scss';"],"names":["registerBlockType","wp","blocks","_wp$blockEditor","blockEditor","RichText","InnerBlocks","InspectorControls","_wp$components","components","ToggleControl","Panel","PanelRow","PanelBody","title","category","attributes","featured","type","source","selector","description","edit","_ref","setAttributes","element","createElement","className","placeholder","tagName","value","onChange","newValue","label","save","_ref2","Content"],"sourceRoot":""}